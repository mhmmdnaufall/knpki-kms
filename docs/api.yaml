openapi: 3.0.3
info:
  title: KMS KNPKI
  description: Api Specification for KMS KNPKI
  version: 1.0.0
  contact:
    name: Muhammad Naufal
    email: muhammadnaufaall@gmail.com
    url: https://linkedin.com/in/mhmmdnaufall
servers:
  - url: https://www.knpkid.org/
    description: KNPKI Server
tags:
  - name: Auth
    description: For authentication matters
  - name: Admin
  - name: Article
  - name: Image
  - name: Quote
  - name: Archive
  - name: Author


paths:

  /api/admin/current:
    get:
      summary: Get Current Admin Account
      tags:
        - Admin
      security:
        - BearerToken: []
      responses:
        200:
          description: Success get Current Admin Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseAdminResponse"
        401:
          $ref: "#/components/responses/401"

  /api/admin:
    post:
      summary: Register Admin
      tags:
        - Admin
      security:
        - CsrfToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RegisterAdminRequest"
      responses:
        200:
          description: Success create admin account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseString"
              example:
                data: OK
                errors: null
                paging: null

        400:
          description: Wrong format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"

        403:
          $ref: "#/components/responses/403"

  /api/auth/login:
    post:
      summary: Admin login
      tags:
        - Auth
      security:
        - CsrfToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginAdminRequest"
      responses:
        200:
          description: Success login admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseTokenResponse"
              example:
                data:
                  token: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTcwNzQ3NzEwMCwiZXhwIjoxNzA3NDgwNzAwfQ.I9imemHoNVQiGYAeN8C5_-_1ETTFXOtu_Vg-tAbkkudEi1HiFMqxNOwmt1Ax3ke7rCqiTgh2v96AOaHfRvnzdw
                errors: null
                paging: null

        400:
          description: Wrong Format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              examples:
                blank username:
                  description: username blank error
                  value:
                    data: null
                    errors: "username: must not be blank"
                    paging: null
                blank password:
                  description: password blank error
                  value:
                    data: null
                    errors: "password: size must be between 5 and 30, password: must not be blank"
                    paging: null
                blank username & password:
                  description: username & password blank error
                  value:
                    data: null
                    errors: "password: size must be between 5 and 30, password: must not be blank, username: must not be blank"
                    paging: null
                username length:
                  description: username is not compatible with size format
                  value:
                    data: null
                    errors: "username: size must be between 0 and 20"
                    paging: null
                password length:
                  description: password is not compatible with size format
                  value:
                    data: null
                    errors: "password: size must be between 5 and 30"
                    paging: null
                username & password length:
                  description: username and password is not compatible with size format
                  value:
                    data: null
                    errors: "password: size must be between 5 and 30, username: size must be between 0 and 20"
                    paging: null

        401:
          description: Failed authorizing account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              example:
                data: null
                errors: Username or password wrong
                paging: null

  /api/auth/logout:
    delete:
      summary: Admin logout
      tags:
        - Auth
      security:
        - BearerToken: []
        - CsrfToken: []
      responses:
        204:
          description: Success logout admin
        401:
          $ref: "#/components/responses/401"

  /api/auth/csrf:
    get:
      summary: Get CSRF token
      tags:
        - Auth
      responses:
        200:
          description: Success get CSRF Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseTokenResponse"
              example:
                data:
                  token: AFrfI_NNzqELpggF6jjV2x5voCvXkDyKQlzaK2zsO1b1VZfeYmK8G8srqsAmw2kwiRXh6ioMjUmy9QyncWXpHlTUDGGRY_W6
                errors: null
                paging: null



  /api/articles:
    get:
      summary: Get All Existing Article OR Search Article
      tags:
        - Article
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 12
      responses:
        200:
          description: Success get all existing Article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseListOnlyArticleResponse"
              example:
                data:
                  - id: 1
                    title: Pengaruh BBM Naik 100% kepada Keluarga
                    createdAt: '2024-02-07 16:23:16'
                    updatedAt: '2024-02-07 16:23:16'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: PNG
                  - id: 2
                    title: Pengaruh BBM Naik 100% kepada Keluarga
                    createdAt: '2024-02-06 23:55:52'
                    updatedAt: '2024-02-06 23:55:52'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: JPG
                  - id: 3
                    title: this is judul
                    createdAt: '2024-02-06 23:27:56'
                    updatedAt: '2024-02-06 23:27:56'
                    body: body
                    teaser: teaser baru ini
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: JPEG
                  - id: 4
                    title: Ini Judul
                    createdAt: '2024-02-06 01:41:39'
                    updatedAt: '2024-02-06 01:41:39'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: PNG
                  - id: 5
                    title: Ini Judul
                    createdAt: '2024-02-06 01:40:32'
                    updatedAt: '2024-02-06 01:40:32'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: JPG
                  - id: 6
                    title: Ini Judul
                    createdAt: '2024-02-06 01:40:31'
                    updatedAt: '2024-02-06 01:40:31'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: JPEG
                  - id: 7
                    title: Ini Judul
                    createdAt: '2024-02-06 01:40:30'
                    updatedAt: '2024-02-06 01:40:30'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: PNG
                  - id: 8
                    title: Ini Judul
                    createdAt: '2024-02-06 01:40:29'
                    updatedAt: '2024-02-06 01:40:29'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: JPG
                  - id: 9
                    title: Ini Judul
                    createdAt: '2024-02-06 01:40:28'
                    updatedAt: '2024-02-06 01:40:28'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: JPEG
                  - id: 10
                    title: Ini Judul
                    createdAt: '2024-02-06 01:40:26'
                    updatedAt: '2024-02-06 01:40:26'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: PNG
                  - id: 11
                    title: Ini Judul
                    createdAt: '2024-02-06 01:40:25'
                    updatedAt: '2024-02-06 01:40:25'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: JPG
                  - id: 12
                    title: Ini Judul
                    createdAt: '2024-02-06 01:40:24'
                    updatedAt: '2024-02-06 01:40:24'
                    body: Ini merupakan tubuh dari tulisan artikel
                    teaser: Kerangka Artikel
                    coverImage:
                      id: hf9349f-hv9r320v-v2rhv8-29vhv
                      format: JPEG
                errors: null
                paging:
                  currentPage: 0
                  totalPage: 5
                  size: 12

    post:
      summary: Create Article
      description: For create new article. only for logged-in account (admin)
      tags:
        - Article
      security:
        - BearerToken: []
        - CsrfToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateArticleRequest"
      responses:
        201:
          description: Success create new Article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseArticleResponse"
              example:
                {
                  "data": {
                    "id": 23,
                    "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                    "createdAt": "2024-05-07 23:32:09",
                    "updatedAt": "2024-05-07 23:32:09",
                    "body": "Ini merupakan tubuh dari tulisan artikel",
                    "teaser": "Kerangka Artikel",
                    "tags": [
                      {
                        "id": "bbm-naik",
                        "name": "bbm naik"
                      },
                      {
                        "id": "bbm",
                        "name": "bbm"
                      },
                      {
                        "id": "pengaruh-bbm",
                        "name": "pengaruh bbm"
                      }
                    ],
                    "admin": {
                      "username": "mhmmdnaufal",
                      "name": "Muhammad Naufal",
                      "image": {
                        "id": "8accef9a-b08b-4a8a-b216-a822b9ad3fc0",
                        "format": "JPG"
                      }
                    },
                    "authors": [
                      {
                        "id": 23,
                        "name": "Muhammad Naufal"
                      },
                      {
                        "id": 22,
                        "name": "Albert Einstein"
                      }
                    ],
                    "coverImage": {
                      "id": "bb78b4b8-45f8-4243-bbfc-64d13d02e07e",
                      "format": "JPG"
                    },
                    "images": [
                      {
                        "id": "423d56c8-91fd-429a-8dd6-ffd24412cebb",
                        "format": "JPG"
                      },
                      {
                        "id": "1cae7fd1-12d7-4c0b-bd2f-b844fbc3f777",
                        "format": "JPG"
                      }
                    ],
                    "archive": {
                      "id": "784fb5bb-5f9c-45cd-ad01-feeec4a42387",
                      "format": "PDF"
                    }
                  },
                  "errors": null,
                  "paging": null
                }
        401:
          $ref: "#/components/responses/401"

        400:
          description: Wrong format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              examples:
                blank title:
                  description: "title can't be blank"
                  value:
                    data: "title: must not be blank"
                    errors: null
                    paging: null
                mismatch image format:
                  description: "wrong image format"
                  value:
                    data: "coverImage: format does not match, only [jpg, jpeg, png] format are acceptable"
                    errors: null
                    paging: null
                mismatch file format:
                  description: "wrong file format"
                  value:
                    data: "archive: format does not match, only [pdf] format are acceptable"
                    errors: null
                    paging: null


        403:
          $ref: "#/components/responses/403"

  /api/articles/{articleId}:
    get:
      summary: View specified article
      tags:
        - Article
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
          description: Put the `id` of the article you want to view
          example: 23
      responses:
        200:
          description: Viewing specified article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseArticleResponse"
              example:
                {
                  "data": {
                    "id": 23,
                    "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                    "createdAt": "2024-05-07 23:32:09",
                    "updatedAt": "2024-05-07 23:32:09",
                    "body": "Ini merupakan tubuh dari tulisan artikel",
                    "teaser": "Kerangka Artikel",
                    "tags": [
                      {
                        "id": "bbm-naik",
                        "name": "bbm naik"
                      },
                      {
                        "id": "bbm",
                        "name": "bbm"
                      },
                      {
                        "id": "pengaruh-bbm",
                        "name": "pengaruh bbm"
                      }
                    ],
                    "admin": {
                      "username": "mhmmdnaufal",
                      "name": "Muhammad Naufal",
                      "image": {
                        "id": "8accef9a-b08b-4a8a-b216-a822b9ad3fc0",
                        "format": "JPG"
                      }
                    },
                    "authors": [
                      {
                        "id": 23,
                        "name": "Muhammad Naufal"
                      },
                      {
                        "id": 22,
                        "name": "Albert Einstein"
                      }
                    ],
                    "coverImage": {
                      "id": "bb78b4b8-45f8-4243-bbfc-64d13d02e07e",
                      "format": "JPG"
                    },
                    "images": [
                      {
                        "id": "1cae7fd1-12d7-4c0b-bd2f-b844fbc3f777",
                        "format": "JPG"
                      },
                      {
                        "id": "423d56c8-91fd-429a-8dd6-ffd24412cebb",
                        "format": "JPG"
                      }
                    ],
                    "archive": {
                      "id": "784fb5bb-5f9c-45cd-ad01-feeec4a42387",
                      "format": "PDF"
                    }
                  },
                  "errors": null,
                  "paging": null
                }

        404:
          description: Article is not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              example:
                data: null
                errors: Article is not found
                paging: null

    put:
      summary: Update article
      tags:
        - Article
      security:
        - BearerToken: []
        - CsrfToken: []
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
          description: Put the `id` of the article you want to update
          example: 23
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateArticleRequest"
      responses:
        200:
          description: Update Article Successed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseArticleResponse"
              example:
                {
                  "data": {
                    "id": 23,
                    "title": "form title updated",
                    "createdAt": "2024-05-07 23:32:09",
                    "updatedAt": "2024-05-07 23:35:48",
                    "body": "form body updated",
                    "teaser": "form teaser updated",
                    "tags": [
                      {
                        "id": "naufal",
                        "name": "naufal"
                      }
                    ],
                    "admin": {
                      "username": "mhmmdnaufal",
                      "name": "Muhammad Naufal",
                      "image": {
                        "id": "8accef9a-b08b-4a8a-b216-a822b9ad3fc0",
                        "format": "JPG"
                      }
                    },
                    "authors": [
                      {
                        "id": 23,
                        "name": "Muhammad Naufal"
                      }
                    ],
                    "coverImage": null,
                    "images": [ ],
                    "archive": {
                      "id": "88a96836-b2de-4092-a510-2b7a6057b86e",
                      "format": "PDF"
                    }
                  },
                  "errors": null,
                  "paging": null
                }
        400:
          description: Wrong format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              examples:
                blank title:
                  description: "title can't be blank"
                  value:
                    data: "title: must not be blank"
                    errors: null
                    paging: null
                mismatch image format:
                  description: "wrong image format"
                  value:
                    data: "coverImage: format does not match, only [jpg, jpeg, png] format are acceptable"
                    errors: null
                    paging: null
                mismatch file format:
                  description: "wrong file format"
                  value:
                    data: "archive: format does not match, only [pdf] format are acceptable"
                    errors: null
                    paging: null
        401:
          $ref: "#/components/responses/401"

        403:
          $ref: "#/components/responses/403"

        403a:
          description: admin trying to update article on another admins article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              example:
                data: null
                errors: this article belongs to someone else
                paging: null


    delete:
      summary: Delete Article
      description: For deleting article. only for logged-in account (admin)
      tags:
        - Article
      security:
        - BearerToken: []
        - CsrfToken: []
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
          description: Put the `id` of the article you want to delete
          example: 1
      responses:
        204:
          description: Success Delete Article

        401:
          $ref: "#/components/responses/401"

        403:
          $ref: "#/components/responses/403"

        403a:
          description: admin trying to delete article on another admins article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              example:
                data: null
                errors: this article belongs to someone else
                paging: null

        404:
          description: Article is not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              example:
                data: null
                errors: Article with id `5c020359-a6db-42ba-9285-772e739f2620` is not found
                paging: null



  /api/tags/{tagId}/articles:
    get:
      summary: Get all related article with given tag
      tags:
        - Article
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: string
          description: Put the tags id you want to search
          example: bbm
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 12

      responses:
        200:
          description: Success get related article with given tags
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseListOnlyArticleResponse"
              example:
                {
                  "data": [
                    {
                      "id": 22,
                      "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                      "createdAt": "2024-05-07 23:30:40",
                      "updatedAt": "2024-05-07 23:30:40",
                      "body": "Ini merupakan tubuh dari tulisan artikel",
                      "teaser": "Kerangka Artikel",
                      "coverImage": {
                        "id": "70cdc03d-bb07-48b7-83e4-a822c49303d1",
                        "format": "JPG"
                      }
                    },
                    {
                      "id": 21,
                      "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                      "createdAt": "2024-05-07 23:16:06",
                      "updatedAt": "2024-05-07 23:16:06",
                      "body": "Ini merupakan tubuh dari tulisan artikel",
                      "teaser": "Kerangka Artikel",
                      "coverImage": {
                        "id": "1c657dfd-51db-4e53-8cf7-89be088d88c7",
                        "format": "JPG"
                      }
                    },
                    {
                      "id": 20,
                      "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                      "createdAt": "2024-05-05 15:17:49",
                      "updatedAt": "2024-05-05 15:17:49",
                      "body": "Ini merupakan tubuh dari tulisan artikel",
                      "teaser": "Kerangka Artikel",
                      "coverImage": {
                        "id": "850c32dc-7912-4152-bad6-3e2d7261ddfc",
                        "format": "JPG"
                      }
                    }
                  ],
                  "errors": null,
                  "paging": {
                    "currentPage": 0,
                    "totalPage": 1,
                    "size": 12
                  }
                }

  /api/admin/{username}/articles:
    get:
      summary: Get all admin's article by username
      tags:
        - Article
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          description: Put username admin you want to search
      responses:
        200:
          description: Success get article by admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseListOnlyArticleResponse"
              example:
                {
                  "data": [
                    {
                      "id": 23,
                      "title": "form title updated",
                      "createdAt": "2024-05-07 23:32:09",
                      "updatedAt": "2024-05-07 23:35:48",
                      "body": "form body updated",
                      "teaser": "form teaser updated",
                      "coverImage": null
                    },
                    {
                      "id": 22,
                      "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                      "createdAt": "2024-05-07 23:30:40",
                      "updatedAt": "2024-05-07 23:30:40",
                      "body": "Ini merupakan tubuh dari tulisan artikel",
                      "teaser": "Kerangka Artikel",
                      "coverImage": {
                        "id": "70cdc03d-bb07-48b7-83e4-a822c49303d1",
                        "format": "JPG"
                      }
                    },
                    {
                      "id": 21,
                      "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                      "createdAt": "2024-05-07 23:16:06",
                      "updatedAt": "2024-05-07 23:16:06",
                      "body": "Ini merupakan tubuh dari tulisan artikel",
                      "teaser": "Kerangka Artikel",
                      "coverImage": {
                        "id": "1c657dfd-51db-4e53-8cf7-89be088d88c7",
                        "format": "JPG"
                      }
                    },
                    {
                      "id": 20,
                      "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                      "createdAt": "2024-05-05 15:17:49",
                      "updatedAt": "2024-05-05 15:17:49",
                      "body": "Ini merupakan tubuh dari tulisan artikel",
                      "teaser": "Kerangka Artikel",
                      "coverImage": {
                        "id": "850c32dc-7912-4152-bad6-3e2d7261ddfc",
                        "format": "JPG"
                      }
                    },
                    {
                      "id": 19,
                      "title": "form title updated",
                      "createdAt": "2024-05-03 08:53:43",
                      "updatedAt": "2024-05-04 17:51:18",
                      "body": "form body updated",
                      "teaser": "form teaser updated",
                      "coverImage": null
                    }
                  ],
                  "errors": null,
                  "paging": {
                    "currentPage": 0,
                    "totalPage": 1,
                    "size": 12
                  }
                }

  /image/{imageFileName}:
    get:
      summary: Get image
      tags:
        - Image
      parameters:
        - name: imageFileName
          in: path
          required: true
          schema:
            type: string
          description: "Put image file name, ex: `2d90545b-b069-48b1-b787-f44d2ff1be17.png`"
      responses:
        200:
          description: Success get image
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        404:
          description: there's no image with given name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              example:
                data: null
                errors: "'2d90545b-b069-48b1-b787-f44d2ff1be17.png' is not found"
                paging: null

  /api/quotes:
    post:
      summary: Create Quote
      description: For create new quote. only for logged-in account (admin)
      tags:
        - Quote
      security:
        - BearerToken: []
        - CsrfToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuoteRequest'
      responses:
        201:
          description: Success create new quote
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseQuoteResponse"
              example:
                {
                  "data": {
                    "id": 8,
                    "body": "Insanity is doing the same thing over and over again and expecting different results",
                    "author": {
                      "id": 22,
                      "name": "Albert Einstein"
                    },
                    "admin": {
                      "username": "mhmmdnaufal",
                      "name": "Muhammad Naufal",
                      "image": {
                        "id": "8accef9a-b08b-4a8a-b216-a822b9ad3fc0",
                        "format": "JPG"
                      }
                    }
                  },
                  "errors": null,
                  "paging": null
                }
        400:
          description: Wrong format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              examples:
                blank body:
                  description: "body can't be blank"
                  value:
                    {
                      "data": null,
                      "errors": "body: must not be blank",
                      "paging": null
                    }
                blank author:
                  description: "author can't be blank"
                  value:
                    {
                      "data": null,
                      "errors": "author: must not be blank",
                      "paging": null
                    }
                body & author blank:
                  description: "body and author can't be blank"
                  value:
                    {
                      "data": null,
                      "errors": "body: must not be blank, author: must not be blank",
                      "paging": null
                    }
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"

    get:
      tags:
        - Quote
      summary: Get All Existing Quote
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 12

      responses:
        200:
          description: Success get all existing Quote
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponseListQuoteResponse"
              example:
                {
                  "data": [
                    {
                      "id": 1,
                      "body": "Updated quote",
                      "createdAt": "2024-05-13 11:14:16",
                      "updatedAt": "2024-05-13 11:21:33",
                      "author": {
                        "id": 22,
                        "name": "Albert Einstein"
                      },
                      "admin": {
                        "username": "mhmmdnaufal",
                        "name": "Muhammad Naufal",
                        "image": {
                          "id": "8accef9a-b08b-4a8a-b216-a822b9ad3fc0",
                          "format": "JPG"
                        }
                      }
                    }
                  ],
                  "errors": null,
                  "paging": {
                    "currentPage": 0,
                    "totalPage": 1,
                    "size": 12
                  }
                }


  /api/quotes/{quoteId}:
    put:
      summary: Update Quote
      tags:
        - Quote
      security:
        - BearerToken: []
        - CsrfToken: []
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
          description: Put the `id` of the quote you want to update
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuoteRequest'
      responses:
        200:
          description: Update Quote Successed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'

        400:
          description: Wrong format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              examples:
                blank body:
                  description: "body can't be blank"
                  value:
                    {
                      "data": null,
                      "errors": "body: must not be blank",
                      "paging": null
                    }
                blank author:
                  description: "author can't be blank"
                  value:
                    {
                      "data": null,
                      "errors": "author: must not be blank",
                      "paging": null
                    }
                body & author blank:
                  description: "body and author can't be blank"
                  value:
                    {
                      "data": null,
                      "errors": "body: must not be blank, author: must not be blank",
                      "paging": null
                    }
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          description: quote not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebResponse'
              example:
                {
                  "data": null,
                  "errors": "quote with id '1' is not found",
                  "paging": null
                }

    delete:
      summary: Delete Quote
      description: For deleting article. only for logged-in account (admin)
      tags:
        - Quote
      security:
        - BearerToken: []
        - CsrfToken: []
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
          description: Put the `id` of the quote you want to update
          example: 1
      responses:
        204:
          description: Success Delete Article

        401:
          $ref: "#/components/responses/401"

        403:
          $ref: "#/components/responses/403"

        404:
          description: quote not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebResponse'
              example:
                {
                  "data": null,
                  "errors": "quote with id '1' is not found",
                  "paging": null
                }

    get:
      tags:
        - Quote
      summary: Get Quote by Id
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
          description: Put the `id` of the quote you want to update
          example: 1
      responses:
        200:
          description: Update Quote Successed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
        404:
          description: quote not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebResponse'
              example:
                {
                  "data": null,
                  "errors": "quote with id '1' is not found",
                  "paging": null
                }


  /archives/{archiveName}:
    get:
      tags:
        - Archive
      summary: Get Archive OR Download Archive
      parameters:
        - name: archiveName
          in: path
          required: true
          schema:
            type: string
            example: a48f6cd3-46d4-4c50-bb90-c04be3bd92cb.pdf
        - name: download
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Success get archive file
          headers:
            Content-Disposition:
              description: This header is set if `download=true` in query parameter
              schema:
                type: string
                example: attachment; filename="a48f6cd3-46d4-4c50-bb90-c04be3bd92cb.pdf"
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        404:
          description: there's no image with given name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebResponse"
              example:
                data: null
                errors: "'a48f6cd3-46d4-4c50-bb90-c04be3bd92cb.pdf' is not found"
                paging: null

  /api/authors/{authorId}:
    get:
      tags:
        - Author
      summary: Get Author by Id
      parameters:
        - name: authorId
          in: path
          required: true
          schema:
            type: integer
          description: Put the `id` of the author you want to get
          example: 1
      responses:
        200:
          description: success get author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebResponseAuthorResponse'
              example:
                {
                  "data": {
                    "id": 1,
                    "name": "Albert Einstein",
                    "articles": [
                      {
                        "id": 20,
                        "title": "Pengaruh BBM Naik 100% kepada Keluarga",
                        "createdAt": "2024-05-05 15:17:49",
                        "updatedAt": "2024-05-05 15:17:49",
                        "body": "Ini merupakan tubuh dari tulisan artikel",
                        "teaser": "Kerangka Artikel",
                        "tags": [
                          {
                            "id": "pengaruh-bbm",
                            "name": "pengaruh bbm"
                          },
                          {
                            "id": "bbm",
                            "name": "bbm"
                          },
                          {
                            "id": "bbm-naik",
                            "name": "bbm naik"
                          }
                        ],
                        "admin": {
                          "username": "mhmmdnaufal",
                          "name": "Muhammad Naufal",
                          "image": {
                            "id": "8accef9a-b08b-4a8a-b216-a822b9ad3fc0",
                            "format": "JPG"
                          }
                        },
                        "authors": [
                          {
                            "id": 1,
                            "name": "Albert Einstein"
                          }
                        ],
                        "coverImage": {
                          "id": "850c32dc-7912-4152-bad6-3e2d7261ddfc",
                          "format": "JPG"
                        },
                        "images": [
                          {
                            "id": "70eab26b-83a7-429a-a80f-d3ae6a438107",
                            "format": "JPG"
                          },
                          {
                            "id": "72e60fcb-9f8e-4cdf-903a-38c40ca3ae80",
                            "format": "JPG"
                          }
                        ],
                        "archive": {
                          "id": "f0c5f880-e092-4b2b-8731-031e576e2cb1",
                          "format": "PDF"
                        }
                      }
                    ],
                    "quotes": [
                      {
                        "id": 7,
                        "body": "Insanity is doing the same thing over and over again and expecting different results",
                        "author": {
                          "id": 22,
                          "name": "Albert Einstein"
                        },
                        "admin": {
                          "username": "mhmmdnaufal",
                          "name": "Muhammad Naufal",
                          "image": {
                            "id": "8accef9a-b08b-4a8a-b216-a822b9ad3fc0",
                            "format": "JPG"
                          }
                        }
                      }
                    ]
                  },
                  "errors": null,
                  "paging": null
                }
        404:
          description: author not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebResponse'
              example:
                {
                  "data": null,
                  "errors": "author with id '1' is not found",
                  "paging": null
                }





components:

  securitySchemes:
    BearerToken:
      description: Put JWT Token with format "Bearer `token`"
      type: apiKey
      in: header
      name: Authorization

    CsrfToken:
      description: Put CSRF Token
      type: apiKey
      in: header
      name: X-CSRF-TOKEN

  responses:
    401:
      description: User Token Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WebResponse"
          example:
            data: null
            errors: Unauthorized
            paging: null
    403:
      description: CSRF Token not valid
      content:
        application/json:
          schema:
            type: object
            properties:
              timestamp:
                type: string
                example: 2024-02-09T13:10:51.107+00:00
              status:
                type: integer
                example: 403
              error:
                type: string
                example: Forbidden
              path:
                type: string
                example: /api/articles

  schemas:

    AdminResponse:
      type: object
      properties:
        username:
          type: string
          example: "mhmmdnaufal"
        name:
          type: string
          example: "Muhammad Naufal"
        image:
          type: object
          properties:
            id:
              type: string
              example: 8accef9a-b08b-4a8a-b216-a822b9ad3fc0
            format:
              type: string
              enum:
                - JPG
                - JPEG
                - PNG
              example: JPG

    LoginAdminRequest:
      type: object
      properties:
        username:
          type: string
          required: true
          nullable: false
          example: mhmmdnaufal
        password:
          type: string
          required: true
          nullable: false
          example: rahasia

    CreateArticleRequest:
      required:
        - body
        - title
        - authors
      type: object
      properties:
        title:
          maxLength: 100
          minLength: 0
          type: string
        coverImage:
          type: string
          format: binary
        body:
          maxLength: 65535
          minLength: 0
          type: string
        teaser:
          maxLength: 200
          minLength: 0
          type: string
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
            format: binary
        authors:
          uniqueItems: true
          type: array
          items:
            type: string
        archive:
          type: string
          format: binary

    UpdateArticleRequest:
      type: object
      required:
        - body
        - title
        - authors
      properties:
        title:
          maxLength: 100
          minLength: 0
          type: string
          example: Ini Judul
        coverImage:
          type: string
          format: binary
          example: fyecy2ry43ycr3n9hfrhn9vnaofhafafp3]ptr432u9v8qq
        body:
          maxLength: 65535
          minLength: 0
          type: string
          example: Article merupakan karya tulis lengkap, misalnya laporan berita atau esai dalam majalah, surat kabar dan sebagainya
        teaser:
          maxLength: 200
          minLength: 0
          type: string
          example: Artikel ini membicarakan definisi artikel
        tags:
          type: array
          uniqueItems: true
          items:
            type: string
          example:
            - Article
            - Artikel
            - Definition
            - Karya Tulis
        images:
          type: array
          items:
            type: string
            format: binary
          example:
            - ufrun994832unr9asfjajfvjpjbpjf[jf]FFK0[fbk0aifpoi9-rinbt
            - aisodjoijnvur0-vUAVHFNH4392upfjFEJNP[RJPFEJSRa5ybqhww
            - ohjnf08u4n0t4u30rajfvapjevjeqjtqjbatq4t632tq4wt4tn
            - 5923ybn9yahbtoghosdhgoabjtogj502ajvfjojnbjj09ut
        authors:
          uniqueItems: true
          type: array
          items:
            type: string
        archive:
          type: string
          format: binary
          example: vy948vy9vhnarshnv1yt01243yattvantvo123atel123dktla231jtqvj

    ArticleResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        body:
          type: string
        teaser:
          type: string
        tags:
          uniqueItems: true
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        admin:
          type: object
          properties:
            username:
              type: string
            name:
              type: string
            image:
              type: object
              properties:
                id:
                  type: string
                format:
                  type: string
                  enum:
                    - PNG
                    - JPG
                    - JPEG
        authors:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string

        coverImage:
          type: object
          properties:
            id:
              type: string
            format:
              type: string
              enum:
                - PNG
                - JPG
                - JPEG
        images:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              format:
                type: string
                enum:
                  - PNG
                  - JPG
                  - JPEG
        archive:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              format:
                type: string
                enum:
                  - PDF

    OnlyArticleResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        body:
          type: string
        teaser:
          type: string
        coverImage:
          type: object
          properties:
            id:
              type: string
            format:
              type: string
              enum:
                - PNG
                - JPG
                - JPEG

    RegisterAdminRequest:
      type: object
      required:
        - username
        - password
        - name
      properties:
        username:
          maxLength: 20
          minLength: 1
          type: string
        password:
          maxLength: 50
          minLength: 8
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        image:
          type: string
          format: binary

    CreateQuoteRequest:
      required:
        - body
        - author
      type: object
      properties:
        body:
          type: string
          maxLength: 200
          example: Insanity is doing the same thing over and over again and expecting different results
        author:
          type: string
          maxLength: 100
          example: Albert Einstein

    UpdateQuoteRequest:
      required:
        - body
        - author
      type: object
      properties:
        body:
          type: string
          maxLength: 200
          example: Insanity is doing the same thing over and over again and expecting different results
        author:
          type: string
          maxLength: 100
          example: Albert Einstein

    QuoteResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        body:
          type: string
          example: Insanity is doing the same thing over and over again and expecting different results
        createdAt:
          type: string
          example: 2024-05-13 11:14:16
        updatedAt:
          type: string
          example: 2024-05-13 11:21:33
        author:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: Albert Einstein
        admin:
          type: object
          properties:
            username:
              type: string
              example: mhmmdnaufal
            name:
              type: string
              example: Muhammad Naufal
            image:
              type: object
              properties:
                id:
                  type: string
                  example: 8accef9a-b08b-4a8a-b216-a822b9ad3fc0
                format:
                  type: string
                  enum:
                    - JPG
                    - JPEG
                    - PNG
                  example: JPG

    TokenResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    AuthorResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleResponse'
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/QuoteResponse'


    WebResponse:
      type: object
      properties:
        data:
          type: object
          nullable: true
        errors:
          type: string
          nullable: true
        paging:
          $ref: "#/components/schemas/PagingResponse"

    PagingResponse:
      type: object
      nullable: true
      properties:
        currentPage:
          type: integer
          format: int32
        totalPage:
          type: integer
          format: int32
        size:
          type: integer
          format: int32

    WebResponseAdminResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AdminResponse'
        errors:
          type: string
          example: null
        paging:
          $ref: '#/components/schemas/PagingResponse'

    WebResponseListOnlyArticleResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/OnlyArticleResponse"
        errors:
          type: string
        paging:
          $ref: "#/components/schemas/PagingResponse"

    WebResponseListQuoteResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/QuoteResponse'
        errors:
          type: string
        paging:
          $ref: "#/components/schemas/PagingResponse"

    WebResponseString:
      type: object
      properties:
        data:
          type: string
        errors:
          type: string
        paging:
          $ref: '#/components/schemas/PagingResponse'

    WebResponseTokenResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TokenResponse'
        errors:
          type: string
        paging:
          $ref: '#/components/schemas/PagingResponse'

    WebResponseArticleResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ArticleResponse'
        errors:
          type: string
        paging:
          $ref: '#/components/schemas/PagingResponse'

    WebResponseQuoteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/QuoteResponse'
        errors:
          type: string
        paging:
          $ref: '#/components/schemas/PagingResponse'

    WebResponseAuthorResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AuthorResponse'
        errors:
          type: string
        paging:
          $ref: '#/components/schemas/PagingResponse'
